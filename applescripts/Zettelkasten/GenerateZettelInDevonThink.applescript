----	Created by: Sascha Kiefer--	Created on: 03.01.20----	Copyright © 2020 Sascha Kiefer, All Rights Reserved---- Generates an ZettelID based on the last Zettel Createduse AppleScript version "2.4" -- Yosemite (10.10) or lateruse scripting additionsset myZettelkastenUUID to "4E773FD4-1314-4F33-ABA9-32E1B6362ABF"set datePrefix to do shell script "date +'%Y-%m-%d'"-- Get the Keyboard Maestro Inputtell application "Keyboard Maestro Engine"	set kmZettelName to getvariable "Zettel Name"	set kmInhalt to getvariable "Inhalt"	set kmTemp to getvariable "Temporär"	set kmTemplate to getvariable "zettelTemplate"	set kmZettelTag to getvariable "zettelTag"end telltell application "DEVONthink 3"	-- Generate new ID based on the existing Zettel	set myDates to {}	set lastNumber to 1		set myZettelkasten to get record with uuid myZettelkastenUUID	set resultList to search ("name:<" & datePrefix) in myZettelkasten		if resultList is not {} then		repeat with listItem in resultList			set myDates to myDates & (item 1 of my getNameComponents(name of listItem))		end repeat				set myDates to my simpleSort(myDates)		set lastEntry to item -1 of myDates				set oldDelimiters to AppleScript's text item delimiters		set AppleScript's text item delimiters to "_"		set theArray to every text item of lastEntry		set AppleScript's text item delimiters to oldDelimiters				set lastNumber to (item 2 of theArray as integer) + 1	end if		if lastNumber < 10 then		set lastNumberText to "0" & lastNumber as text	else		set lastNumberText to lastNumber as text	end if		set zettelID to datePrefix & "_" & lastNumberText		-- Create new Zettel	set theName to zettelID & " | " & kmZettelName		if kmTemp is "1" then		set theName to theName & " (TEMP)"	end if		set theZettel to create record with {name:theName, type:markdown} in myZettelkasten		tell theZettel		set plain text to kmInhalt & "	" & kmTemplate				if kmZettelTag is not "<none>" then			set tags to {kmZettelTag}		end if			end tell		-- Select the created zettel	set frontmostWindow to think window 1	set windowClass to (class of frontmostWindow)		if windowClass is equal to viewer window then		set selection of frontmostWindow to {theZettel}	end ifend tell--------------------------------------------------------------------------------------------------------------------------------------------------- Simple List Sorter-------------------------------------------------------------------------------------------------------------------------------------------------on simpleSort(my_list)	set the index_list to {}	set the sorted_list to {}	repeat (the number of items in my_list) times		set the low_item to ""		repeat with i from 1 to (number of items in my_list)			if i is not in the index_list then				set this_item to item i of my_list as text				if the low_item is "" then					set the low_item to this_item					set the low_item_index to i				else if this_item comes before the low_item then					set the low_item to this_item					set the low_item_index to i				end if			end if		end repeat		set the end of sorted_list to the low_item		set the end of the index_list to the low_item_index	end repeat	return the sorted_listend simpleSort--------------------------------------------------------------------------------------------------------------------------------------------------- Titel von Devon Think in Namen und Zettel ID aufsplitten -------------------------------------------------------------------------------------------------------------------------------------------------to getNameComponents(title)	-- save delimiters to restore old settings	set oldDelimiters to AppleScript's text item delimiters		-- set delimiters to delimiter to be used	set AppleScript's text item delimiters to " | "		-- create the array	set theArray to every text item of title		-- restore the old setting	set AppleScript's text item delimiters to oldDelimiters		-- return the result	return theArrayend getNameComponents